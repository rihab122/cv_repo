#define LED_GREEN_PIN 6
#define LED_YELLOW_PIN 9
#define LED_BLUE_PIN 10
#define LED_RED_PIN 11

#define BUTTON_GREEN_PIN 2
#define BUTTON_YELLOW_PIN 3
#define BUTTON_BLUE_PIN 4
#define BUTTON_RED_PIN 12

#define BUZZER_PIN 5

#define TOTAL_LEDS 4
#define CHOSEN_LEDS 3

int ledPins[TOTAL_LEDS] = {LED_GREEN_PIN, LED_YELLOW_PIN, LED_BLUE_PIN, LED_RED_PIN};
int buttonPins[TOTAL_LEDS] = {BUTTON_GREEN_PIN, BUTTON_YELLOW_PIN, BUTTON_BLUE_PIN, BUTTON_RED_PIN}; 
int chosenLedIndices[CHOSEN_LEDS];
int pressedButtonIndices[CHOSEN_LEDS];
int pressedButtonCount = 0;
unsigned long gameStartTime;
unsigned long firstButtonPressTime;
bool isGameStarted = false;
bool isGameEnded = false;

#define VICTORY_TONE 1000
#define FAILURE_TONE 500

void setup() {
  initializePins();
  randomSeed(analogRead(A1));
}
void loop() {
  manageGameState();
}
void initializePins() {
  for (int i = 0; i < TOTAL_LEDS; i++) {
    pinMode(ledPins[i], OUTPUT);
    pinMode(buttonPins[i], INPUT_PULLUP);
  }
  pinMode(BUZZER_PIN, OUTPUT);
}

void manageGameState() {
  if (isGameEnded) {
    checkForNewGameStart();
  } else if (!isGameStarted) {
    startNewGame();
  } else {
    playGame();
  }
}

void startNewGame() {
  resetGame();
  pickRandomLeds();
  signalStart();
}
void resetGame() {
  pressedButtonCount = 0;
  isGameStarted = true;
  isGameEnded = false;
  turnOffAllLeds();
}

void pickRandomLeds() {
  for (int i = 0; i < CHOSEN_LEDS; i++) {
    chosenLedIndices[i] = random(TOTAL_LEDS);
    digitalWrite(ledPins[chosenLedIndices[i]], HIGH);
    delay(1000); // אורות ה-LED נדלקים למשך שניה
    digitalWrite(ledPins[chosenLedIndices[i]], LOW);
    delay(100); // עיכוב קצר לפני הדלקת ה-LED הבא
  }
  delay(500); // עיכוב קצר לפני השמעת הצליל
}
